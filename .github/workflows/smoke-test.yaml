# This workflow downloads artifacts from a (by default, draft) release and runs
# a short smoke test where the application is installed and run and immediately
# shut down.
# Since we need contents-write permissions to look at draft releases, we
# actually download the artifacts in a smaller job, then upload them into the
# run and download it _again_ in the second (per-platform) job where no
# permissions are required.
name: Release smoke test
permissions: {}
on:
  workflow_dispatch:
    inputs:
      tag:
        description: >
          Download artifacts from release with this tag, rather than picking the
          first draft release.
        type: string

jobs:
  download-artifacts:
    name: Find release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to list draft releases
    env:
      RELEASE_TAG: ${{ inputs.tag }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - name: Find release
      if: inputs.tag == ''
      run: >-
        set -o xtrace;
        printf "RELEASE_TAG=%s\n" >>"$GITHUB_ENV"
        "$(gh api repos/${{ github.repository }}/releases
        --jq 'map(select(.draft))[0].tag_name')"
      env:
        GH_TOKEN: ${{ github.token }}
    - name: Download artifacts
      run: |
        if [[ -z "$RELEASE_TAG" ]]; then
          echo "Failed to find release tag" >&2
          exit 1
        fi
        gh release download "$RELEASE_TAG" \
          --repo ${{ github.repository }} \
          --pattern '*.dmg' \
          --pattern '*.dmg.sha512sum' \
          --pattern '*.msi' \
          --pattern '*.msi.sha512sum' \
          --pattern 'rancher-desktop-linux-*.zip' \
          --pattern 'rancher-desktop-linux-*.zip.sha512sum'
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Upload macOS aarch-64 artifacts
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: application-macos-aarch64.zip
        if-no-files-found: error
        path: |
          *.aarch64.dmg
          *.aarch64.dmg.sha512sum
    - name: Upload macOS x86_64 artifacts
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: application-macos-x86_64.zip
        if-no-files-found: error
        path: |
          *.x86_64.dmg
          *.x86_64.dmg.sha512sum
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: application-win32.zip
        if-no-files-found: error
        path: |
          *.msi
          *.msi.sha512sum
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: application-linux.zip
        if-no-files-found: error
        path: |
          rancher-desktop-linux-*.zip
          rancher-desktop-linux-*.zip.sha512sum

  smoke-test:
    name: Smoke test
    needs: download-artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
        - { platform: macos-aarch64, runs-on: macos-14 }
        - { platform: macos-x86_64, runs-on: macos-13 }
        - { platform: win32, runs-on: windows-latest }
        - { platform: linux, runs-on: ubuntu-latest }
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      with:
        persist-credentials: false

    - name: Set up environment
      uses: ./.github/actions/setup-environment

    - name: "Linux: Set startup command"
      if: runner.os == 'Linux'
      run: echo "EXEC_COMMAND=$EXEC_COMMAND" >> "$GITHUB_ENV"
      env:
        EXEC_COMMAND: >-
          exec xvfb-run --auto-servernum
          --server-args='-screen 0 1280x960x24'

    - name: "Windows: Install yq"
      if: runner.os == 'Windows'
      run: |
        set -o xtrace
        bindir="$HOME/bin"
        if [[ ! "$PATH" =~ "$bindir" ]]; then
          bindir=/usr/bin
        fi
        if ! command -v yq; then
          mkdir -p "$bindir"
          curl --location --output "$bindir/yq.exe" \
            https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_windows_amd64.exe
          chmod a+x "$bindir/yq.exe"
        fi
      shell: bash

    - name: Set log directory
      shell: bash
      # Use node here to do path manipulation to get correct Windows paths.
      run: >-
        node --eval='console.log("RD_LOGS_DIR=" + require("path").join(process.cwd(), "logs"));'
        >> "$GITHUB_ENV"

    - name: Download artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: application-${{ matrix.platform }}.zip
    - run: ${{ env.EXEC_COMMAND }} .github/workflows/smoke-test/smoke-test.sh
      shell: bash
    - name: Upload logs
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      if: always()
      with:
        name: logs-${{ matrix.platform }}.zip
        path: ${{ github.workspace }}/logs
        if-no-files-found: warn
